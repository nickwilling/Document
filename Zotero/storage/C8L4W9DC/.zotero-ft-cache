A Bayesian Network Model for Fire Assessment and Prediction
Mehdi Ben Lazreg(B), Jaziar Radianti, and Ole-Christoﬀer Granmo
Centre for Integrated Emergency Management, University of Agder, Grimstad, Norway
{mehdi.b.lazreg,jaziar.radianti,ole.granmo}@uia.no http://www.ciem.uia.no
Abstract. Smartphones and other wearable computers with modern sensor technologies are becoming more advanced and widespread. This paper proposes exploiting those devices to help the ﬁreﬁghting operation. It introduces a Bayesian network model that infers the state of the ﬁre and predicts its future development based on smartphone sensor data gathered within the ﬁre area. The model provides a prediction accuracy of 84.79 % and an area under the curve of 0.83. This solution had also been tested in the context of a ﬁre drill and proved to help ﬁreﬁghters assess the ﬁre situation and speed up their work.
Keywords: Bayesian network · Indoor ﬁre · Smartphone sensors
1 Introduction
The international association of ﬁre and rescue services reported approximately a million ﬁres in buildings or domestic houses around the world in 2012 alone. These ﬁres unfortunately left 23.7 thousand victims [9]. Thousands of people around the world are aﬀected directly or indirectly by ﬁre. Such facts have previously motivated numerous works in the ﬁeld of automated ﬁre detection that tried to ﬁnd some solution to prevent ﬁres and limit the casualties.
During a ﬁre, people tend to leave the building, however, there are potential rescuers going in and trapped victims inside carrying smartphones. In this paper, we propose a model for ﬁre assessment and prediction based on a Bayesian network and smartphone sensors. The number of smartphone user has been growing considerably and is expected to grow even further. Moreover, these smartphones are more and more equipped with advanced sensor technology. The sensor data is gathered from the smartphone located in the ﬁre zone and fed to the Bayesian network. Bayesian networks are capable of handling uncertainty in data which is a common issue when dealing with ﬁre incidents [14]. In addition, they can be adapted to deal with diﬀerent ﬁre scenarios. To assess the ﬁre status in a speciﬁc room, the Bayesian network uses the sensor data along with the estimated state of the ﬁre in neighbouring rooms. The model follows the ﬁre
c Springer International Publishing Switzerland 2015 P. Pardalos et al. (Eds.): MOD 2015, LNCS 9432, pp. 269–279, 2015. DOI: 10.1007/978-3-319-27926-8 24

270 M.B. Lazreg et al.
development from its ignition until it reaches a fully developed status in addition to forecasting its development.
The topic of automated ﬁre detection and prediction has been extensively studied in the review by Mahdipour et al. [1]. In their review of the subject they showed that most studies focus on detecting ﬁre and reducing the rate of false ﬁre alarm. Various methods have been investigated, including image and video processing, computer vision and statistical analysis to enhance ﬁre detection. These methods focus only on detecting the ﬁre, whereas our method not only detects but follows the development of the ﬁre. Other researches have focused on detecting and predicting ﬁre development by means of wireless sensor networks in context of outdoor and residential area ﬁres. Bahrepour et al. [3] use wireless sensor network (combination of temperature, ionisation, CO and photoelectric sensors) along with machine learning techniques that includes decision tree neural network and na¨ıve Bayes to detect outdoor and indoor ﬁre. Ma [4] used sensor network (temperature, smoke thickness and CO) and neural network fusion algorithm to compute the probability of a ﬁre generated by coal occurs. Nonetheless, those methods are limited only on detecting the ﬁre and they did not take into consideration the sate of the ﬁre in neighbouring rooms as a factor in the ﬁre’s propagation. Matellini et al. [5] used Bayesian networks to model the ﬁre development within dwellings from the point of ignition through to extinguishment. Cheng et al. [6] modelled the building as a direct acyclic graph and used Bayesian networks to model ﬁre dynamics in the building and determine the probability of the ﬁre spread from a room to another. However, these methods do not use sensors as a basis for detecting and predicting the ﬁre, but only use the state of the ﬁre in diﬀerent rooms of the building to deduce its development. Combining Bayesian network with sensor technology with taking into consideration the state of the ﬁre in neighbouring rooms to assess and predict the ﬁre state can be considered as the main contribution of this paper.
The paper is organised as follows: Sect. 2 provides a brief introduction to Bayesian networks. Section 3 presents the ﬁre assessment and prediction model. In Sect. 4, we evaluate the model based on two criteria: its performance for assessing the ﬁre and its usefulness in case of ﬁre. We ﬁnally conclude this work in Sect. 5, and reveal the possible future direction.
2 Bayesian Network
A Bayesian Network (BN) represents a set of random variables and their conditional dependencies using a directed acyclic graph (DAG) [7]. In brief, a BN is composed of [14]:
– Directed acyclic graph: contain a set of nodes and directed edges connecting one node to another in a way that starting from a node A there is no sequence of edges that loops back to node A. In a BN, the nodes may represent an observable quantity, latent variable, unknown parameter or hypotheses. The edges represent the causal relationship between two events represented by two nodes: an edge directed from node A to node B implies that the occurrence

A Bayesian Network Model for Fire Assessment and Prediction 271

of an event represented by node A has a direct impact on the occurrence of another event represented by node B. In a DAG, family terminology is used to describe the relationship between nodes. Hence the parents of A (pa(A)) are a set of nodes that have an edge directed to A. The children of A are a set of nodes that are reached by an edge generated from A. – A set of probabilities: each node in the DAG is assigned a probability distribution if it is a root node or a conditional probability distribution if it is not. Those probabilities express the likelihood that the event symbolised by a certain node accrues.

Bayesian network is based on the fundamental assumption of causal Markov condition [8]. This assumption speciﬁes that each node in the DAG of the BN is conditionally independent of its non-descendent nodes given its parents. To further explain this assumption, let us consider a DAG = (V, E) where V represents the set of nodes in the DAG and E is the set of edges between those nodes. Let X ∈ V be a node in this DAG. Let child(X) be the set of all the children of X and pa(X) the set of all parents (direct causes of X). The causal Markov condition can be expressed formally as follows

∀X, Y ∈ V ; Y ∈/ child(X) ⇒ P (X|Y, pa(X)) = P (X|pa(X)).

(1)

From Eq. (1), it can be concluded that for any BN composed of a set of nodes {X1, X2, ..., Xn} the joint probability is given by
P (X1, X2, ..., Xn) = P (Xn|X1, X2, ..., Xn−1)P (X1, X2, ..., Xn−1) = P (X1)P (X2|X1)...P (Xn|X1, X2, ..., Xn−1)
n
= P (Xk|pa(Xk)).
k=1

3 Fire Assessment and Prediction Model Based on Bayesian Network
3.1 Fire Assessment
A ﬁre is a dynamic process that evolves through time. Its status at a present time t depends on that at previous time steps [6]. One might then think of using a dynamic Bayesian network (DBN) to capture ﬁre dynamics. However, for each node a DNB keeps other nodes for each time step. Thus, DBN is more complicated and consequently more process consuming [14]. Since we intend to run the application on mobile devices with limited power and battery life, the application of a simple BN is preferable. The Bayesian network presents each room in the building by a node (see Fig. 1(b)). This choice was motivated by the work done by Cheng et al. [6] and Granmo et al. [15] who also used Bayesian network to model indoor hazards.
A ﬁre normally goes through ﬁve stages (dormant, growing, developed, decaying and burnt out) [6]. In this research, we only focus on the ﬁrst three stages for

272 M.B. Lazreg et al.
two main reasons. First, this choice simpliﬁes the classiﬁcation process. Second, it allows us to model the ﬁre at it most dangerous stages (growing and developed). Therefore, the ﬁre in a room R can be dormant, growing or developed. Let S be a set representing the ﬁre state in a room
S = {dormant, growing, developed} .
Smartphones come with a variety of sensors. The most appropriate in case of ﬁre are: temperature, humidity, pressure and light from which the visibility can be deduced. Let O be the set of observed sensor data in R
O = {temperature, humidity, visibility, pressure} .

(a) BN at time 0

(b) BN at time t

Fig. 1. BN for real time ﬁre assessment

At time 0, the ﬁre state in R inﬂuences the observed sensor’s values recorded in that room. This is modelled by edges going from the node representing the ﬁre status in the BN to the nodes representing each sensor (Fig. 1(a)). Furthermore, to model the dynamic aspect of the ﬁre at a time t > 0, we added to the model in Fig. 1(a) a node that represents the status of the ﬁre in a room at previous time step. Moreover, the ﬁre in R depends also on the situation of the ﬁre in neighbouring rooms. Therefore, a node representing the ﬁre state in the neighbouring room at previous time step is added to the BN. Note that the graph in Fig. 1(b) only represented one neighbouring room for simplicity. In reality, R can have multiple neighbours. In that case edges are added between each neighbour and R. If we had used a DNB to model the ﬁre we would end up with 12600 nodes for a 30 min ﬁre simulation for each room in the building instead of the 7 nodes that we have in our model.
Let Rt be the random variable representing the state of the ﬁre in R and Nt that of the neighbouring room at a time t. The BN infers the ﬁre state in R

A Bayesian Network Model for Fire Assessment and Prediction 273

at time 0 based on the value of temperature, humidity, visibility and pressure collected by the phone sensors placed in R. At a time t, we add the ﬁre state in R at (t − 1) and the ﬁre state in the neighbouring room N as a factor in the inference process (Fig. 1). This inference is performed using the joint probability distribution of the random variable in the network expressed as follows

P (R0, O) = P (R0|O)P (O) if t = 0

(2)

P (Rt, Rt−1, Nt−1, O) =

P (Rt−1)P (Nt−1)P (Rt|Rt−1, Nt−1)P (Rt|O)P (O) if t > 0. P (Rt) (3)

Finally, at each time step the probability distribution of a node representing the ﬁre state in a room at a time t will be passed to the node that represents its former state as virtual evidence for the next iteration. Unlike normal evidence or soft evidence where the evidence of an observed event is deterministic like in the case of temperature provided by a sensor-, the virtual evidence uses a likelihood ratio to present the conﬁdence toward the observed event. In our case, since the observed state of the ﬁre at a time t is derived from the BN with a certain probability and thus uncertain, it is more appropriate to pass it to the node presenting the previous state as a virtual evidence. The whole process of ﬁre assessment for a single room R is summarised in Algorithm 1.

Fig. 2. BN for ﬁre forecasting
3.2 Fire Prediction
In addition, the BN should be able to forecast the state of the ﬁre at a future time (t + n). For this we designed a BN illustrated in Fig. 2. The network in Fig. 2 is similar to the network designed for ﬁre assessment. The only diﬀerence is the lack of node representing the sensor data since the sensor data provided by the smartphone sensors is only known at the present time. Thus, at each future time step (t + n) the state of the ﬁre in room R is inferred from the state of the ﬁre in R and its neighbouring rooms in the previous time step (t + n − 1). The joint probability distribution would be as follows
P (Rt+n, Rt+n−1, Nt+n−1) = P (Rt+n−1)P (Nt+n−1)P (Rt+n|Rt+n−1, Nt+n−1). (4)
The probability distribution of the ﬁre in R at time (t + n) is then passed to the node representing the probability distribution of the ﬁre in R at time (t + n − 1) as virtual

274 M.B. Lazreg et al.

Algorithm 1. Algorithm for ﬁre assessment using BN

1 Loop

2 forall the oi ∈ O do

3

oi = registered sensor data

4 end

5 forall the si ∈ S do

6

If (t=0) infer P (R0 = si|O))

7

Else infer P (Rt = si|O, Rt−1, Nt−1))

8 end

9 virtual evidence(Rt−1)= Rt 10 t + +

11 EndLoop

Algorithm 2. Algorithm for ﬁre prediction using BN

1 while t ≤ T do

2 forall the si ∈ S do

3

infer P (Rt = si|Rt−1, Nt−1)

4 end

5 virtual evidence (Rt−1)= Rt 6 t++

7 end

evidence. This process is done recursively until a ﬁnal time T in the future is reached (t + n = T ). The whole process of ﬁre prediction is summarised in Algorithm 2.
As Algorithms 1 and 2 suggest we need to infer P (Rt|O, Rt−1, Nt−1)) from Eqs. 3 and 4. To do that we need to compute P (Rt, Rt−1, Nt−1, O)) and P (O) with are respectively known as the most probable explanation and the probability of evidence problem. These problem are diﬃcult problems known to be NP-complete and PP-complete problem respectively [14]. Therefore, Eqs. 3 and 4 cannot be solved directly to obtain the probability of each state of the ﬁre due in general to high computational complexity. However, diﬀerent algorithms have been developed to approximate a solution for those equations. We used one of the fastest and most precise of them: the Estimated Posterior Importance Sampling algorithm for Bayesian Networks (EPISBN) [12]. It is based on using loopy belief propagation [13] to compute an approximation of the posterior probability over all nodes of the network. The loopy belief propagation is based on approximating the problem of computing P (Rt|O, Rt−1, Nt−1)) by computing P (Rt|Rt−1, Nt−1)) and P (O|Rt = si) where P (Rt|O, Rt−1, Nt−1)) = αP (Rt|Rt−1, Nt−1))P (O|Rt). Then, it uses importance sampling to reﬁne this approximation. Importance sampling allows to approximate a function by another function called importance function. It is used to approximate P (O|Rt).

A Bayesian Network Model for Fire Assessment and Prediction 275
4 Test Results and Discussion
4.1 Test Settings
We used the third ﬂoor of the University of Agder building as the scenario for our model. The ﬂoor contains 5 classrooms, 30 oﬃces, 7 group rooms, 4 computer labs, 2 meeting rooms, 12 corridors and 3 stairways used as escape routes from the ﬁre. The building is an interesting case study since it is large enough to be a challenge for ﬁreﬁghters in the event of a ﬁre: based on our meeting with ﬁreﬁghter they stated that they rarely phase a ﬁre spreading in a building of this amplitude. Each room in the building will be represented by a BN as described in Figs. 1 and 2.
The network described in the previous section is trained and tested using data obtained from several ﬁre simulations runs produced using the ﬁre dynamics simulator (FDS) [11]. The FDS permits the imitation of the geometry of a building and its material properties, the deﬁnition of fuel that triggers ﬁre, and the placement of devices such as visibility and temperature sensors in the simulated environment in such a way that ﬁre parameter data can be measured and collected. A user needs ﬁrst to build a 3D space object called mesh to make a ﬁre simulation, which will be used to construct the 3D building geometry being the target of ﬁre simulations. The user can deﬁne the ﬁre cause and starting point and thermal properties of the building material. For our BN experiments, we created a model of the third ﬂoor of our university building that follows all the real dimensional size and the detailed rooms and furniture.
For completing the model, the user can place devices and sensors such as sprinklers, smoke detectors, heat ﬂux gauges and produce the quantity outputs, for example, temperature, visibility and so on. The type of sensors placed in each room in this 3D university building is in line with our research goals, i.e. to get information about the temperature, humidity, visibility, and pressure. We run this simulation twice with different starting points of the ﬁre. During those simulations, all deﬁned sensors would register all the data produced in this simulation. The output of the ﬁre parameters produced by FDS comes as a table containing the value of temperature, humidity, visibility and pressure in each room at each second for 30 min as well as the corresponding ﬁre state to those values.
As we have seen in Sect. 2 the BN is composed of a DAG (described in Figs. 1 and 2) and for each node a probability distribution representing the likelihood that an event represented by that node accuses. We trained one BN based on the table produced by the FDS simulations for all the rooms (we ended up with 128 ﬁre examples). This allows to learn those probability distributions. This includes P (Rt|Rt−1, Nt−1), P (temperature|Rt), P (pressure|Rt).... Once learned those probabilities are used in the inference process to solve Eqs. 3 and 4. The building structure is then loaded into the app. It consist of a table with the room its location and neighbours. Copies of the trained BN nodes are then created for each room based on this table.
Further, We simulate two another set of ﬁre scenarios to test the BN. The lines containing the sensor data are retrieved consecutively from the table produce by FDS and fed as evidence to the Bayesian network. The results of this test are the probabilities of each ﬁre state in each room as a function of time. Thus, the BN prediction varies from room to room and from time step to time step.
We have implemented the BN using JSMILE, a Java interface of SMILE (Structural Modelling, Inference, and Learning Engine) [10]. It allows the creation, editing and use of Bayesian network for probabilistic reasoning and decision making under uncertainty.

276 M.B. Lazreg et al.

4.2 Performance Testing

First, we present the results of a test on a speciﬁc scenario from the scenarios we used to test our BN. The results for two representative rooms (R1 and R2) are presented in Figs. 3 and 4. These Figures show the probability of a dormant, growing and developed ﬁre in the two rooms as a function of time as well as the actual state of the ﬁre (black line). Room R1 is the neighbouring room toe the ﬁre starting point whereas room R2 is located on the opposite side of the building and thus it is the furthest room to the ﬁre starting point. For R1 (Fig. 3), the predicted probabilities match the actual state of the ﬁre. The delay of detecting the growing phase of the ﬁre is 3 s. For Room R2 (Fig. 4), the BN is not sure about its ﬁre state predictions, especially during the growing phase of the ﬁre. This can be due to a conﬂict between the sensors’ data obtained from the simulation and the ﬁre state in neighbouring rooms: the neighbouring rooms experience a developed ﬁre that should propagate to R2 however the sensors’ data suggest that the ﬁre is dormant in the mentioned room. In spite of not distinguishing between the growing and developed state of the ﬁre in room R2, the BN was able to at least detect that there is ﬁre in the room (regardless of its state) with a delay of 30 s. In the remaining rooms, the results vary from room to room but they similar to the results presented for room R1 and R2 with delays to detect the growing and developed state of the ﬁre varying from 3 to 67 s.
Overall the test set, to calculate the overall accuracy of our model, we ﬁrst take the most probable state as the predicted state. Then, for each room we compute the percentage of the correct classiﬁcations. Finally, we average the result over all the room in the building, The overall accuracy of the Bayesian network is then 84.79 %. The model also has an overall area under the curve (AUC) of 0.83. The AUC allows to test the ability of the BN to predict each state of the ﬁre. The AUC can be viewed as the probability that the model gives a higher probability to the ﬁre state that is actually correct. An AUC of 0.83 means that, given an instance from the test set, the model has an 83 % chance of giving a higher probability to the correct state of the ﬁre for that instance. The AUC is a useful metric even if the state of the ﬁre are imbalanced (in our case the growing state is less frequent the two other states). It was extended to evaluate multi class classiﬁcation problem by Hand et al. [2] who proposed to use the formula in Eq. 5 where c in the number of classes and A(i, j) is the AUC of the binary classiﬁcation of two classes i and j out of the c classes:

AU C

=

c(c

2 −

1)

A(i, j).

(5)

i<j

4.3 Game Scenario Testing
As mentioned in the previous section, we implemented the BN model in an Android app, and tested this ﬁre development and prediction app in a serious game. We used a ﬁre scenario simulated by FDS to get the sensor data and feed them to the BN. In this game, a group of players (9 persons), acting as ﬁreﬁghters, conducted a search and rescue operation, while another group (13 persons) played victims trapped in the rooms during the indoor ﬁre hazard, with one person acted as the MCU (Medical Care Unit). The game took place at the University of Agder (UiA) and two game sessions of 30 min each had been planned, i.e. one without and one with app support. We focused

A Bayesian Network Model for Fire Assessment and Prediction 277
Fig. 3. Fire state probabilities in room R1
Fig. 4. Fire state probabilities in room R2
on a hypothetical situation where the ﬁre had grown, and several victims were trapped inside.
We hypothesised that the rescue operation with app support (2nd session) would be faster than without app support (1st session). The game goal was to search for victims trapped in the 3rd ﬂoor, and rescuing them by moving them all the way to the MCU located by the main entrance of the UiA building. All victims that were saved had to be reported to the CM, who monitored the overall progress of the rescue operation performed by all three rescuer groups. No exact script was given to them as how to act, communicate and interact, except that they were informed on the outline of the roles, tasks, scenarios, prior to the game.
In the session without app, the players should check the room one by one and reported to MCU if the room was clearnobody inside. The communication mode was walkie-talkie software on the smartphone. In that session, each burning room would be marked over time by a ﬁre marker, based on a predeﬁned ﬁre spread. In the scenario with the app, the ﬁre information was available on the smartphone and users could observe the ﬁre spread from room to room by the mean of a heat map. The BN-based ﬁre assessment and prediction app served as a decision support and a basis for rescuers to act while saving the victims. The deployment of the app was conducted in two ways: by sending the app directly to the players to download in advance, and by preparing ten devices with the app installed. The app usage was explained in the brieﬁng, and repeated before the 2nd session was started. In fact, familiarising the players with the app was crucial to the success/failure of the game goal.
The quantitative data collected from this game is about the number of victims saved in the ﬁrst and second sessions. The game testing shows that the rescue process

278 M.B. Lazreg et al.
Fig. 5. Number of saved victims as function of time
was faster with the app. Figure 5 shows the time and the number of victims being saved without the ﬁre assessment/prediction app (left) and with the app (right). The horizontal axis indicates the duration of the game in minutes while the vertical axis shows the number of victims saved, as registered by the MCU. The rescue process took 15 min in the ﬁrst experiment, and 13 min in the second experiment. This time was counted from the moment the ﬁrst victim was found. In the second session, 11 victims were saved in the last 8 min. On the contrary, the saved victims were spread over a longer time during the ﬁrst round. There was a longer delay before the rescuers could ﬁnd the ﬁrst victim in the second experiment (Fig. 5, right). The reason for this was that the players needed some adjustment to use the app, and some of them experienced technical issues at the beginning of the app use. Further, most of the players relied more on the real-time ﬁre assessment than on the prediction feature while performing their rescue task. This is due to the fact that the rescuers (as they reported in the brieﬁng) had to deal with the real-time assessment of ﬁre situation while trying to save the victim at the same time, and thus could not spend time on “additional” task such as checking where ﬁre would develop in the future.
Hence, we learnt from the game that being able to see how the ﬁre develops over time was useful in a ﬁre situation to decide where the safest place to escape is, but there was a barrier in practice regarding the usage of the prediction feature. The interview with real ﬁreﬁghters who were present during the game indicated that placing the app with the ﬁreﬁghters’ leader, who normally does not go inside the building, can relieve the ﬁreﬁghter from that extra task. The leader can then inform the team members about the future ﬁre situation while the ﬁreﬁghters can concentrate on ﬁnding the victims. This could be a better design for future testing the usefulness of ﬁre prediction feature.
5 Conclusion
This paper proposes a model that uses smartphone sensors along with Bayesian network to assess ﬁre situation and predict its development. The Bayesian network infers the probability of each state of the ﬁre based on the sensor data collected from smartphones in the ﬁre area and the state of the ﬁre in the previous time step. It provides an overview of the ﬁre situation along with forecasting its development. The test of the model performance shows that the computed probabilities match the actual state of the ﬁre in 84.79 % of the cases and an area under the curve of 0.83. This solution

A Bayesian Network Model for Fire Assessment and Prediction 279
also helps facilitate and speed up the work of ﬁreﬁghters in order the save more lives as revealed from ﬁeld experience. The future directions of this work would be to use smoke and temperature sensors in the building alongside the smartphones as well as ﬁguring out the optimal number of sensors needed inside the building to still achieve an acceptable prediction accuracy of the ﬁre. We also plan to develop our model to include ﬁre development from one ﬂoor to another.
References
1. Elham, M., Chitra, D.: Automatic ﬁre detection based on soft computing techniques: review from 2000 to 2010. Artif. Intell. Rev. 42(4), 895–934 (2014)
2. David, H., Till, R.: A simple generalisation of the area under the ROC curve for multiple class classiﬁcation problems. Mach Learn. 45(2), 171–186 (2001)
3. Bahrepour, M., van der Zwaag, B.J., Meratnia, N., Havinga, P.: Fire data analysis and feature reduction using computational intelligence methods. In: Phillips-Wren, G., Jain, L.C., Nakamatsu, K., Howlett, R.J. (eds.) IDT 2010. SIST, vol. 4, pp. 289–298. Springer, Heidelberg (2010)
4. Ma, X.-M.: Application of data fusion theory in coal gas ﬁre prediction system. In: International Conference on Intelligent Computation Technology and Automation (ICICTA) (2008)
5. Matellini, D.B., Wall, A.D., Jenkinson, I.D., Wang, J., Pritchard, R.: A bayesian network model for ﬁre development and occupant response within dwellings. In: IEEE Conference on Prognostics and System Health Management (PHM) (2012)
6. Cheng, H., Hadjisophocleous, G.V.: The modelling of ﬁre spread in buildings by bayesian network. Fire Saf. J. 44(6), 901–908 (2009)
7. Stephenson, T.A.: An Introduction to Bayesian Network Theory and Usage. IDIAP researsh institue Martigny, Switzerland (2000)
8. Hausman, D.H., Woodward, J.: Independence Invariance and the Causal Markov Condition. Oxfor University Press, Oxford (1999)
9. Brushlinsky, N.N., Ahrens, M., Skolov, S.V., Wagner, P.: World ﬁre statistics. In: International Association of Fire and Rescue Service (2014)
10. Druzdzel, M.J.: SMILE: structural modeling, inference, and learning engine and GeNIe: a development environment for graphical decision-theoretic models. In: Proceedings of the Sixteenth National Conference on Artiﬁcial Intelligence and the Eleventh Innovative Applications of Artiﬁcial Intelligence Conference Innovative Applications of Artiﬁcial Intelligence (1999)
11. Kevin, M., Howard, B., Ronald, R.: Fire dynamics simulator technical reference guide. National Institute of Standards and Technology (2007)
12. Yuan, C., Druzdzel, M.J.: An importance sampling algorithm based on evidence pre-propagation. In: The Conference on Uncertainty in Artiﬁcial Intelligence (2003)
13. Murphy, K., Weiss, Y., Jordan, M.: Loopy belief propagation for approximate inference: an empirical study. In: Proceedings of the Fifteenth Annual Conference on Uncertainty in Artiﬁcial Intelligence (1999)
14. Van Harmelen, F., Lifschitz, V., Porter, B.: Handbook of Knowledge Representation, 1st edn. Elsevier, San Diego (2008)
15. Granmo, O.-C., Radianti, J., Goodwin, M., Dugdale, J., Sarshar, P., Glimsdal, S., Gonzalez, J.J.: A spatio-temporal probabilistic model of hazard and crowd dynamics in disasters for evacuation planning. In: Ali, M., Bosse, T., Hindriks, K.V., Hoogendoorn, M., Jonker, C.M., Treur, J. (eds.) IEA/AIE 2013. LNCS, vol. 7906, pp. 63–72. Springer, Heidelberg (2013)

